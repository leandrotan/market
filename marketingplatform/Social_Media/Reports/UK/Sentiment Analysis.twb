<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xml:base='http://nex-tbl-08.nexius.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.14.1117.2230                                -->
  <repository-location id='SentimentAnalysis' path='/t/WRD10-social-media/workbooks' revision='1.5' site='WRD10-social-media' />
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='sentiments_by_category (wrd10_socialmedia)' inline='true' name='hortonworkshadoophive.42067.369754282408' version='8.3'>
      <connection authentication='yes' authentication-type='3' class='hortonworkshadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='wrd10_socialmedia' server='nex-hdp-15' server-oauth='' username='sm_user' workgroup-auth-mode='as-is'>
        <relation name='sentiments_by_category' type='text'>select o.id,&#13;&#10;o.day_key,&#13;&#10;cs.csp,&#13;&#10;coordinates,&#13;&#10;s.sentiment_category,&#13;&#10;trim(split(s.subj,&quot;\\/&quot;)[0]) as category,&#13;&#10;trim(split(s.subj,&quot;\\/&quot;)[1]) as sub_category,&#13;&#10;cs.ismain&#13;&#10; from &#13;&#10;(select id,coordinates, day_key, user_mention.screen_name as mention_name, hashtag.text as hashtag from wrd10_socialmedia.twitter_publicstream_euoperators ops&#13;&#10;LATERAL VIEW OUTER explode(entities.user_mentions) mentions1 AS user_mention&#13;&#10;LATERAL VIEW OUTER explode(entities.hashtags) hashtags1 AS hashtag) o,&#13;&#10;wrd10_socialmedia.twitter_csp cs,&#13;&#10;(select id,sentiment_category,subj from&#13;&#10;wrd10_socialmedia.tweetsentiments_euoperators snt&#13;&#10;LATERAL VIEW explode(split(snt.entity_subject, &quot;\\|&quot;)) subjs as subj) s&#13;&#10;where (upper(cs.csp_screen_name) = upper(o.mention_name)&#13;&#10;or upper(cs.csp_screen_name) = upper(o.hashtag))&#13;&#10;and o.id = s.id</relation>
        <connection-customization class='hortonworkshadoophive' enabled='false' version='8.3'>
          <vendor name='hortonworkshadoophive' />
          <driver name='hortonworkshadoophive' />
          <customizations>
            <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
            <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
            <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
            <customization name='CAP_FAST_METADATA' value='no' />
            <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
            <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
            <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
            <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
            <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
            <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
            <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
            <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
            <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
            <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
            <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
            <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
            <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
            <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
            <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
            <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
            <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
            <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
            <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
            <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
            <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
            <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
            <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
            <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
            <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
            <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='yes' />
            <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
            <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
            <customization name='CAP_QUERY_SIMPLIFY_SUBQUERY_CONTEXT_FOR_JOIN_CULLING' value='no' />
            <customization name='CAP_QUERY_SORT_BY' value='yes' />
            <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
            <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_DATASOURCE_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
            <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
            <customization name='CAP_QUERY_TOP_N' value='yes' />
            <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
            <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
            <customization name='CAP_SELECT_INTO' value='no' />
            <customization name='CAP_SELECT_TOP_INTO' value='no' />
            <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
            <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
            <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
            <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
            <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
          </customizations>
        </connection-customization>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[sentiments_by_category]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day_key]</local-name>
            <parent-name>[sentiments_by_category]</parent-name>
            <remote-alias>day_key</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>csp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[csp]</local-name>
            <parent-name>[sentiments_by_category]</parent-name>
            <remote-alias>csp</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coordinates]</local-name>
            <parent-name>[sentiments_by_category]</parent-name>
            <remote-alias>coordinates</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_category</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sentiment_category]</local-name>
            <parent-name>[sentiments_by_category]</parent-name>
            <remote-alias>sentiment_category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[sentiments_by_category]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sub_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sub_category]</local-name>
            <parent-name>[sentiments_by_category]</parent-name>
            <remote-alias>sub_category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ismain</remote-name>
            <remote-type>11</remote-type>
            <local-name>[ismain]</local-name>
            <parent-name>[sentiments_by_category]</parent-name>
            <remote-alias>ismain</remote-alias>
            <ordinal>8</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Comments' datatype='integer' name='[Calculation_3500304142208733]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD( [id])' scope-isolation='false' />
      </column>
      <column caption='% of Total' datatype='real' name='[Calculation_5320304122204139]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3500304142208733]*100/TOTAL([Calculation_3500304142208733])' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sentiment' datatype='string' name='[Calculation_6260304094103613]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [sentiment_category]&#13;&#10;when 1 THEN &apos;Neutral&apos;&#13;&#10;when 2 then &apos;Positive&apos;&#13;&#10;when 0 then &apos;Negative&apos;&#13;&#10;when 3 then &apos;Severe&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Negative Comments' datatype='integer' name='[Calculation_7180226044308865]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(CASE [sentiment_category]&#13;&#10;WHEN 0 THEN id&#13;&#10;WHEN 3 THEN id&#13;&#10;END)' scope-isolation='false' />
      </column>
      <column caption='Positive Comments' datatype='integer' name='[Negative Comments (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(CASE [sentiment_category]&#13;&#10;WHEN 2 THEN id&#13;&#10;END)' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neutral Comments' datatype='integer' name='[Positive Comments (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(CASE [sentiment_category]&#13;&#10;WHEN 1 THEN id&#13;&#10;END)' scope-isolation='false' />
      </column>
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[coordinates]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal'>
      </column>
      <column caption='Service Provider' datatype='string' name='[csp]' role='dimension' type='nominal'>
      </column>
      <column caption='Day' datatype='date' datatype-customized='true' name='[day_key]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[id]' role='dimension' type='ordinal'>
      </column>
      <column datatype='boolean' name='[ismain]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[sentiment_category]' role='dimension' type='ordinal'>
      </column>
      <column caption='Subcategory' datatype='string' name='[sub_category]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Calculation_6260304094103613]' derivation='None' name='[none:Calculation_6260304094103613:nk]' pivot='key' type='nominal' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[sub_category]' derivation='None' name='[none:sub_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3500304142208733]' derivation='User' name='[usr:Calculation_3500304142208733:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5320304122204139]' derivation='User' name='[usr:Calculation_5320304122204139:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_7180226044308865]' derivation='User' name='[usr:Calculation_7180226044308865:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Negative Comments (copy)]' derivation='User' name='[usr:Negative Comments (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Positive Comments (copy)]' derivation='User' name='[usr:Positive Comments (copy):qk]' pivot='key' type='quantitative' />
      <group caption='Action (CSP)' name='[Action (CSP)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[csp]' />
        </groupfilter>
      </group>
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[category]' />
        </groupfilter>
      </group>
      <group caption='Action (Service Provider)' name='[Action (Service Provider)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[csp]' />
        </groupfilter>
      </group>
      <group caption='Action (ismain)' hidden='true' name='[Action (ismain)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ismain]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category Hierarchy'>
          <field>[category]</field>
          <field>[sub_category]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\WRD\Reports\Twitter\sentiments_by_category (wrd10_socialmedia).tde' schema='Extract' tablename='Extract' update-time='03/04/2015 08:20:53 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_6260304094103613]' formula='CASE [sentiment_category]&#13;&#10;when 1 THEN &apos;Neutral&apos;&#13;&#10;when 2 then &apos;Positive&apos;&#13;&#10;when 0 then &apos;Negative&apos;&#13;&#10;when 3 then &apos;Severe&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='16354' timestamp-start='2015-03-04 20:20:53.385' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>1</ordinal>
              <family>sentiments_by_category</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Business Affairs&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Positive&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coordinates</remote-name>
              <remote-type>129</remote-type>
              <local-name>[coordinates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coordinates</remote-alias>
              <ordinal>2</ordinal>
              <family>sentiments_by_category</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2900</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;{\&quot;type\&quot;:\&quot;Point\&quot;,\&quot;coordinates\&quot;:[\&quot;-0.001632\&quot;,\&quot;51.537917\&quot;]}&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;{\&quot;type\&quot;:\&quot;Point\&quot;,\&quot;coordinates\&quot;:[\&quot;9.95324\&quot;,\&quot;53.562728\&quot;]}&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>csp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[csp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>csp</remote-alias>
              <ordinal>3</ordinal>
              <family>sentiments_by_category</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Hutchinson 3G&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Vodafone UK&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day_key</remote-name>
              <remote-type>133</remote-type>
              <local-name>[day_key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day_key</remote-alias>
              <ordinal>4</ordinal>
              <family>sentiments_by_category</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2015-02-06#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-02-19#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>5</ordinal>
              <family>sentiments_by_category</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3728</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2147483647</statistic>
                <statistic aggregation='Max' datatype='integer'>2147483647</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ismain</remote-name>
              <remote-type>11</remote-type>
              <local-name>[ismain]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ismain</remote-alias>
              <ordinal>6</ordinal>
              <family>sentiments_by_category</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sentiment_category</remote-name>
              <remote-type>16</remote-type>
              <local-name>[sentiment_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sentiment_category</remote-alias>
              <ordinal>7</ordinal>
              <family>sentiments_by_category</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>3</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sub_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sub_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sub_category</remote-alias>
              <ordinal>8</ordinal>
              <family>sentiments_by_category</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Customer Care&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Voice Complaint&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_6260304094103613</remote-name>
              <remote-type>130</remote-type>
              <local-name>[Calculation_6260304094103613]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_6260304094103613</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>2</scale>
              <width>8</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Negative&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Severe&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Business Affairs&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Network&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Customer Care&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6260304094103613:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Severe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sub_category:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Voice Complaint&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Pricing or Billing Complaint&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Other Network Complaints&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Customer Care&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Shops Complaint&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Data Complaint&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Handset Complaint&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[hortonworkshadoophive.42067.369754282408].[usr:Calculation_7180226044308865:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[hortonworkshadoophive.42067.369754282408].[usr:Negative Comments (copy):qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[hortonworkshadoophive.42067.369754282408].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[hortonworkshadoophive.42067.369754282408].[usr:Calculation_5320304122204139:qk:1]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[hortonworkshadoophive.42067.369754282408].[usr:Positive Comments (copy):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='hortonworkshadoophive.42067.369754282408'>
      <datasources>
        <datasource caption='sentiments_by_category (wrd10_socialmedia)' name='hortonworkshadoophive.42067.369754282408' />
      </datasources>
      <datasource-dependencies datasource='hortonworkshadoophive.42067.369754282408'>
        <column caption='Service Provider' datatype='string' name='[csp]' role='dimension' type='nominal'>
        </column>
        <column caption='Day' datatype='date' datatype-customized='true' name='[day_key]' role='dimension' type='ordinal'>
        </column>
        <column-instance column='[csp]' derivation='None' name='[none:csp:nk]' pivot='key' type='nominal' />
        <column-instance column='[day_key]' derivation='Day-Trunc' name='[tdy:day_key:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[hortonworkshadoophive.42067.369754282408].[none:csp:nk]'>
        <groupfilter function='level-members' level='[none:csp:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[hortonworkshadoophive.42067.369754282408].[tdy:day_key:qk]' included-values='all'>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation type='on-select' />
      <source dashboard='Sentiment Analysis' type='sheet' worksheet='Social Media Activities Trend' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Sentiment%20Analysis?%5Bhortonworkshadoophive.42067.369754282408%5D.%5Bcsp%5D~s0=&lt;[csp]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Social Media Activities Trend' />
        <param name='target' value='Sentiment Analysis' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sentiment Analysis' type='sheet' worksheet='Bad Sentiments  Distribution' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Sentiment%20Analysis?%5Bhortonworkshadoophive.42067.369754282408%5D.%5Bcategory%5D~s0=&lt;[category]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Bad Sentiments  Distribution,Social Media Activities Trend' />
        <param name='target' value='Sentiment Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bad Sentiments  Distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='sentiments_by_category (wrd10_socialmedia)' name='hortonworkshadoophive.42067.369754282408' />
          </datasources>
          <datasource-dependencies datasource='hortonworkshadoophive.42067.369754282408'>
            <column caption='Total Comments' datatype='integer' name='[Calculation_3500304142208733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD( [id])' scope-isolation='false' />
            </column>
            <column caption='% of Total' datatype='real' name='[Calculation_5320304122204139]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3500304142208733]*100/TOTAL([Calculation_3500304142208733])' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Service Provider' datatype='string' name='[csp]' role='dimension' type='nominal'>
            </column>
            <column caption='Day' datatype='date' datatype-customized='true' name='[day_key]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[csp]' derivation='None' name='[none:csp:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[day_key]' derivation='Day-Trunc' name='[tdy:day_key:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3500304142208733]' derivation='User' name='[usr:Calculation_3500304142208733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5320304122204139]' derivation='User' name='[usr:Calculation_5320304122204139:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[hortonworkshadoophive.42067.369754282408].[none:category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:category:nk]' member='&quot;Neutral&quot;' />
                <groupfilter function='member' level='[none:category:nk]' member='&quot;Positive&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[hortonworkshadoophive.42067.369754282408].[none:category:nk]</column>
            <column>[hortonworkshadoophive.42067.369754282408].[tdy:day_key:qk]</column>
            <column>[hortonworkshadoophive.42067.369754282408].[none:csp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[hortonworkshadoophive.42067.369754282408].[none:category:nk]' />
              <wedge-size column='[hortonworkshadoophive.42067.369754282408].[sum:Number of Records:qk]' />
              <size column='[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]' />
              <text column='[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]' />
              <tooltip column='[hortonworkshadoophive.42067.369754282408].[usr:Calculation_5320304122204139:qk:1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'>&lt;[hortonworkshadoophive.42067.369754282408].[none:category:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Total Comments:&#9;</run>
                <run bold='true'>&lt;[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;% of Total:&#9;</run>
                <run bold='true'>&lt;[hortonworkshadoophive.42067.369754282408].[usr:Calculation_5320304122204139:qk:1]&gt; %</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Bad and Severe Sentiments Distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='sentiments_by_category (wrd10_socialmedia)' name='hortonworkshadoophive.42067.369754282408' />
          </datasources>
          <datasource-dependencies datasource='hortonworkshadoophive.42067.369754282408'>
            <column caption='Total Comments' datatype='integer' name='[Calculation_3500304142208733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD( [id])' scope-isolation='false' />
            </column>
            <column caption='Sentiment' datatype='string' name='[Calculation_6260304094103613]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [sentiment_category]&#13;&#10;when 1 THEN &apos;Neutral&apos;&#13;&#10;when 2 then &apos;Positive&apos;&#13;&#10;when 0 then &apos;Negative&apos;&#13;&#10;when 3 then &apos;Severe&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Service Provider' datatype='string' name='[csp]' role='dimension' type='nominal'>
            </column>
            <column caption='Day' datatype='date' datatype-customized='true' name='[day_key]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_6260304094103613]' derivation='None' name='[none:Calculation_6260304094103613:nk]' pivot='key' type='nominal' />
            <column-instance column='[csp]' derivation='None' name='[none:csp:nk]' pivot='key' type='nominal' />
            <column-instance column='[sub_category]' derivation='None' name='[none:sub_category:nk]' pivot='key' type='nominal' />
            <column caption='Subcategory' datatype='string' name='[sub_category]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[day_key]' derivation='Day-Trunc' name='[tdy:day_key:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3500304142208733]' derivation='User' name='[usr:Calculation_3500304142208733:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hortonworkshadoophive.42067.369754282408].[Action (Category)]'>
            <groupfilter function='level-members' level='[category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_6260304094103613:nk]' member='&quot;Negative&quot;' />
              <groupfilter function='member' level='[none:Calculation_6260304094103613:nk]' member='&quot;Severe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]</column>
            <column>[hortonworkshadoophive.42067.369754282408].[Action (Category)]</column>
            <column>[hortonworkshadoophive.42067.369754282408].[tdy:day_key:qk]</column>
            <column>[hortonworkshadoophive.42067.369754282408].[none:csp:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]' />
            </encodings>
            <reference-line axis-column='[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[hortonworkshadoophive.42067.369754282408].[none:sub_category:nk]</rows>
        <cols>[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly Complaints'>
      <table>
        <view>
          <datasources>
            <datasource caption='sentiments_by_category (wrd10_socialmedia)' name='hortonworkshadoophive.42067.369754282408' />
          </datasources>
          <datasource-dependencies datasource='hortonworkshadoophive.42067.369754282408'>
            <column caption='Total Comments' datatype='integer' name='[Calculation_3500304142208733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD( [id])' scope-isolation='false' />
            </column>
            <column caption='Sentiment' datatype='string' name='[Calculation_6260304094103613]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [sentiment_category]&#13;&#10;when 1 THEN &apos;Neutral&apos;&#13;&#10;when 2 then &apos;Positive&apos;&#13;&#10;when 0 then &apos;Negative&apos;&#13;&#10;when 3 then &apos;Severe&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
            </column>
            <column caption='Service Provider' datatype='string' name='[csp]' role='dimension' type='nominal'>
            </column>
            <column caption='Day' datatype='date' datatype-customized='true' name='[day_key]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_6260304094103613]' derivation='None' name='[none:Calculation_6260304094103613:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[csp]' derivation='None' name='[none:csp:nk]' pivot='key' type='nominal' />
            <column-instance column='[sub_category]' derivation='None' name='[none:sub_category:nk]' pivot='key' type='nominal' />
            <column caption='Subcategory' datatype='string' name='[sub_category]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[day_key]' derivation='Day-Trunc' name='[tdy:day_key:qk]' pivot='key' type='quantitative' />
            <column-instance column='[day_key]' derivation='Month-Trunc' name='[tmn:day_key:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3500304142208733]' derivation='User' name='[usr:Calculation_3500304142208733:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_6260304094103613:nk]' member='&quot;Negative&quot;' />
              <groupfilter function='member' level='[none:Calculation_6260304094103613:nk]' member='&quot;Severe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hortonworkshadoophive.42067.369754282408].[none:csp:nk]</column>
            <column>[hortonworkshadoophive.42067.369754282408].[tdy:day_key:qk]</column>
            <column>[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[hortonworkshadoophive.42067.369754282408].[none:sub_category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]</rows>
        <cols>([hortonworkshadoophive.42067.369754282408].[tmn:day_key:ok] / ([hortonworkshadoophive.42067.369754282408].[none:category:nk] / [hortonworkshadoophive.42067.369754282408].[none:sub_category:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Social Media Activities Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='sentiments_by_category (wrd10_socialmedia)' name='hortonworkshadoophive.42067.369754282408' />
          </datasources>
          <datasource-dependencies datasource='hortonworkshadoophive.42067.369754282408'>
            <column caption='Total Comments' datatype='integer' name='[Calculation_3500304142208733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD( [id])' scope-isolation='false' />
            </column>
            <column caption='Negative Comments' datatype='integer' name='[Calculation_7180226044308865]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(CASE [sentiment_category]&#13;&#10;WHEN 0 THEN id&#13;&#10;WHEN 3 THEN id&#13;&#10;END)' scope-isolation='false' />
            </column>
            <column caption='Positive Comments' datatype='integer' name='[Negative Comments (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(CASE [sentiment_category]&#13;&#10;WHEN 2 THEN id&#13;&#10;END)' scope-isolation='false' />
            </column>
            <column caption='Neutral Comments' datatype='integer' name='[Positive Comments (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(CASE [sentiment_category]&#13;&#10;WHEN 1 THEN id&#13;&#10;END)' scope-isolation='false' />
            </column>
            <column caption='Service Provider' datatype='string' name='[csp]' role='dimension' type='nominal'>
            </column>
            <column caption='Day' datatype='date' datatype-customized='true' name='[day_key]' role='dimension' type='ordinal'>
            </column>
            <column datatype='boolean' name='[ismain]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[csp]' derivation='None' name='[none:csp:nk]' pivot='key' type='nominal' />
            <column-instance column='[ismain]' derivation='None' name='[none:ismain:nk]' pivot='key' type='nominal' />
            <column-instance column='[day_key]' derivation='Day-Trunc' name='[tdy:day_key:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3500304142208733]' derivation='User' name='[usr:Calculation_3500304142208733:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7180226044308865]' derivation='User' name='[usr:Calculation_7180226044308865:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Negative Comments (copy)]' derivation='User' name='[usr:Negative Comments (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Positive Comments (copy)]' derivation='User' name='[usr:Positive Comments (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hortonworkshadoophive.42067.369754282408].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hortonworkshadoophive.42067.369754282408].[usr:Calculation_7180226044308865:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hortonworkshadoophive.42067.369754282408].[usr:Positive Comments (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hortonworkshadoophive.42067.369754282408].[usr:Negative Comments (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hortonworkshadoophive.42067.369754282408].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[hortonworkshadoophive.42067.369754282408].[usr:Calculation_5320304122204139:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hortonworkshadoophive.42067.369754282408].[:Measure Names]</column>
            <column>[hortonworkshadoophive.42067.369754282408].[none:csp:nk]</column>
            <column>[hortonworkshadoophive.42067.369754282408].[tdy:day_key:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hortonworkshadoophive.42067.369754282408].[:Measure Names]' />
              <size column='[hortonworkshadoophive.42067.369754282408].[none:ismain:nk]' />
              <lod column='[hortonworkshadoophive.42067.369754282408].[none:csp:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Measure Names: </run>
                <run bold='true'>&lt;[hortonworkshadoophive.42067.369754282408].[:Measure Names]&gt;</run>
                <run fontcolor='#787878'>&#10;Day of Date:&#9;</run>
                <run bold='true'>&lt;[hortonworkshadoophive.42067.369754282408].[tdy:day_key:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Service Provider:</run>
                <run bold='true'> &lt;[hortonworkshadoophive.42067.369754282408].[none:csp:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Measure Values:&#9;</run>
                <run bold='true'>&lt;[hortonworkshadoophive.42067.369754282408].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.42779004573822021' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[hortonworkshadoophive.42067.369754282408].[Multiple Values]</rows>
        <cols>[hortonworkshadoophive.42067.369754282408].[tdy:day_key:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sentiment Analysis'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='33333' id='1' name='Social Media Activities Trend' show-title='true' w='84000' x='0' y='0'>
              </zone>
              <zone h='33333' id='14' name='Bad and Severe Sentiments Distribution' show-title='true' w='42000' x='42000' y='66667'>
              </zone>
              <zone h='33333' id='16' name='Bad Sentiments  Distribution' show-title='true' w='42000' x='0' y='66667'>
              </zone>
              <zone h='33334' id='22' name='Monthly Complaints' show-title='true' w='84000' x='0' y='33333'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='13375' id='9' name='Social Media Activities Trend' pane-specification-id='4' param='[hortonworkshadoophive.42067.369754282408].[:Measure Names]' type='color' w='16000' x='84000' y='0'>
              </zone>
              <zone h='10375' id='18' name='Bad Sentiments  Distribution' pane-specification-id='0' param='[hortonworkshadoophive.42067.369754282408].[none:category:nk]' type='color' w='16000' x='84000' y='13375'>
              </zone>
              <zone h='5375' id='19' name='Bad Sentiments  Distribution' pane-specification-id='0' param='[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]' type='size' w='16000' x='84000' y='23750'>
              </zone>
              <zone h='17625' id='20' name='Social Media Activities Trend' param='[hortonworkshadoophive.42067.369754282408].[:Measure Names]' type='filter' w='16000' x='84000' y='29125'>
              </zone>
              <zone h='17625' id='21' name='Social Media Activities Trend' param='[hortonworkshadoophive.42067.369754282408].[none:csp:nk]' type='filter' w='16000' x='84000' y='46750'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Social Media Activities Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[hortonworkshadoophive.42067.369754282408].[:Measure Names]' type='color' />
            <card pane-specification-id='4' param='[hortonworkshadoophive.42067.369754282408].[none:ismain:nk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[hortonworkshadoophive.42067.369754282408].[:Measure Names]' show-domain='false' type='filter' />
            <card param='[hortonworkshadoophive.42067.369754282408].[none:csp:nk]' type='filter' />
            <card param='[hortonworkshadoophive.42067.369754282408].[tdy:day_key:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hortonworkshadoophive.42061.046351400466].[:Measure Names]</field>
          <field>[hortonworkshadoophive.42061.046351400466].[none:Calculation_3270227035826072:nk]</field>
          <field>[hortonworkshadoophive.42061.046351400466].[none:day_key:qk]</field>
          <field>[hortonworkshadoophive.42061.046351400466].[none:ismain:nk]</field>
          <field>[hortonworkshadoophive.42061.046351400466].[tdy:day_key:ok]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[:Measure Names]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[none:csp:nk]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[none:ismain:nk]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[yr:day_key:ok]</field>
          <field>[twitter_social_media_activities (wrd10_socialmedia.twitter_social_media_activities) (wrd10_socialmedia) (copy)].[none:csp_name:nk]</field>
          <field>[twitter_social_media_activities (wrd10_socialmedia.twitter_social_media_activities) (wrd10_socialmedia) (copy)].[yr:day_key:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Bad Sentiments  Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hortonworkshadoophive.42067.369754282408].[none:category:nk]' type='color' />
            <card pane-specification-id='0' param='[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hortonworkshadoophive.42061.046351400466].[none:scp_name:nk]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[none:category:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Bad and Severe Sentiments Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[none:category:nk]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[none:sub_category:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Monthly Complaints'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hortonworkshadoophive.42067.369754282408].[none:sub_category:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[none:category:nk]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[none:sub_category:nk]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[tmn:day_key:ok]</field>
          <field>[hortonworkshadoophive.42067.369754282408].[yr:day_key:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Sentiment Analysis'>
      <zones>
        <zone name='Social Media Activities Trend'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[hortonworkshadoophive.42067.369754282408].[:Measure Names]'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
        </zone>
        <zone name='Bad and Severe Sentiments Distribution'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[hortonworkshadoophive.42067.369754282408].[none:Calculation_6260304094103613:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Bad Sentiments  Distribution'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Monthly Complaints'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[hortonworkshadoophive.42067.369754282408].[none:sub_category:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Social Media Activities Trend' pane-specification-id='4' param='[hortonworkshadoophive.42067.369754282408].[:Measure Names]' type='color' />
        <zone name='Bad Sentiments  Distribution' pane-specification-id='0' param='[hortonworkshadoophive.42067.369754282408].[none:category:nk]' type='color' />
        <zone name='Bad Sentiments  Distribution' pane-specification-id='0' param='[hortonworkshadoophive.42067.369754282408].[usr:Calculation_3500304142208733:qk]' type='size' />
        <zone name='Social Media Activities Trend' param='[hortonworkshadoophive.42067.369754282408].[:Measure Names]' show-domain='false' type='filter' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Social Media Activities Trend' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bad Sentiments  Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bad and Severe Sentiments Distribution' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Monthly Complaints' width='192'>
      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
      ESbUtf8BVhmfn/ZFFX0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sentiment Analysis' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
