package com.sentiment;
import com.aliasi.chunk.Chunk;
import com.aliasi.chunk.Chunking;
import com.aliasi.dict.DictionaryEntry;
import com.aliasi.dict.MapDictionary;
import com.aliasi.dict.ExactDictionaryChunker;
import com.aliasi.tokenizer.IndoEuropeanTokenizerFactory;

public class DictionaryChunker {

    static final double CHUNK_SCORE = 1.0;
    static ExactDictionaryChunker dictionaryChunkerTT; // AllMatches = True, CaseSensitive = True
    static ExactDictionaryChunker dictionaryChunkerTF;// AllMatches = True, CaseSensitive = False
    static ExactDictionaryChunker dictionaryChunkerFT;// AllMatches = False, CaseSensitive = True
    static ExactDictionaryChunker dictionaryChunkerFF;// AllMatches = False, CaseSensitive = False
    static MapDictionary<String> dictionary;
    public DictionaryChunker() {
    		initDictionary();	

    	}

    public static void initDictionary() {
    	// here is where to define the dictionary
    	
        dictionary = new MapDictionary<String>();
        dictionary.addEntry(new DictionaryEntry<String>("Internet","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("wired","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("data","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("broadband","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("router","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("switch router","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("offline","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("download","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Upload","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("speed","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("4G","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("3G","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("LTE","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("connection","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("disconnection","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("signal","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("GPRS","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("EDGE","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("offline","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("WIFI","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("megabytes","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Mega Bytes","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("MB","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("gigabyte","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Giga Byte","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("GB","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Network","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("call","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("voice","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("drop call","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("breaking up","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("breaking","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Coverage","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("system down","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("service","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("No Service","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("voicemail","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("voice mail","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("sms","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("text","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("signal","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("signal problem","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("RBT","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ring Back Tone","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("chat","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Customer Service","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Waiting time","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("queue","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Time","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Wait","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("business customer","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("help","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("assistance","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("waste of time","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("unresolved","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("not working","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("not operational","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("resolve","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("issue","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("subscriber","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("contract","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("friendly","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("rude","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("complaint","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Phone","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Mobile","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("iphone","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("HTC","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("LG","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("IOS","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Android","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("handset","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("samsung","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("sony","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("shop","Business Affairs / Shops",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("mall","Business Affairs / Shops",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ticket number","Business Affairs / Shops",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("bill","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("charge","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("pay","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("money","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("refund","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("credit","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§Ø¨Ø±Ø§Ø¬ Ø§Ø±Ø³Ø§Ù","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙØª","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙÙÙ","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("USB","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¯Ø§ØªØ§","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ§ÙØªØ±ÙØª","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ¯Ø§ÙÙ ÙÙØ¯","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØ¬Ø§","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ¯ÙÙÙÙØ¯","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ADSL","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("h+","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("e","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("edge","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¬ÙØ¬Ø§","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØªØºØ·ÙØ©","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙØ²ÙØ¯","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ¯Ù Ø§Ø³ Ø§Ù","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ³ÙØ¬ÙØ§Ù","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("MB","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¬ÙØ§Ø² Ø§ÙØªÙØ¬ÙÙ","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ØªØ­ÙÙÙ","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø³Ø±Ø¹Ø©","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¥Ø´Ø§Ø±Ø©","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("GPRS","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("4G","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>(" Ø§ÙÙØª","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨ØªÙØµÙ","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("H+","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ´Ø¨ÙÙ Ø¨ØªØ·ÙØ¹ ÙØªÙØ²Ù","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>(" ÙÙØ¨ÙÙ Ø§ÙØªØ±ÙØª","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØªØ±ÙØª","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØª","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙØ§Ø´Ø©","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØ§Ø´Ø©","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙØ§ØªØ³ Ø§Ø¨","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("LTE","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙÙÙØª","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("internet","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("data","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ³Ø±Ø¹Ù","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø³Ø±Ø¹Ù","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨Ø§ÙØªØ³","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙØ¬Ø§","Network / Data",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§Ø¨Ø±Ø§Ø¬ Ø§Ø±Ø³Ø§Ù","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ´Ø¨ÙØ§Øª","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ§ØªØµØ§Ù","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ´Ø¨ÙÙ","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØªØºØ·ÙØ©","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ³ÙØ¬ÙØ§Ù","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ØªØµÙ","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙØ§ÙÙÙ","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØ´Ø¨ÙØ© ÙØ§ÙØ¹Ø©","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØ§ÙÙÙ","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨ÙØªØµÙ","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨ÙØ³ØªÙØ¨Ù","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØ§ÙÙØ§Øª","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØ³Ø¬","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨ØªØ³ØªÙØ¨Ù","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨ØªØªØµÙ","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ØºÙØ± ÙØªØ§Ø­","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¯ÙØ§ÙÙ","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙØ§ÙÙØ§Øª","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙÙ","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙØ§ÙÙØ©","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("calls","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ØªØµØ§Ù","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØ±Ù","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØ·Ø¹","Network / Voice",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§Ø¨Ø±Ø§Ø¬ Ø§Ø±Ø³Ø§Ù","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ´Ø¨ÙØ§Øª","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ´Ø¨ÙÙ","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØªØºØ·ÙØ©","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ³ÙØ¬ÙØ§Ù","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ´Ø¨ÙØ©","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>(" Ø±Ø³Ø§ÙÙ","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØªØºØ·ÙØ©","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø´Ø±ÙØ­Ø©","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØªØºØ·ÙØ©","Network / Other Network",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø®Ø¯ÙÙ Ø§ÙØ¹ÙÙØ§Ø¡","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø®Ø¯ÙØ© Ø§ÙØ¹ÙÙØ§","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙÙ Ø³ÙØªØ±","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ØªÙØ§ØµÙØª","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ¹ÙÙØ§Ø¡","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ¹ÙÙØ§","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§Ø³ØªÙØ³Ø§Ø±","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø³Ø¤Ø§Ù","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("customer","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¹ÙÙÙ","Customer Care / Customer Care",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ¬ÙØ§Ù","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙØ¨Ø§ÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØ¨ÙÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ£ÙÙÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø³Ø§ÙØ³ÙÙØ¬","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø³ÙÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>(" xperia","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙÙÙØ§","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ØªÙÙÙÙÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¢Ø¨Ù","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("application","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØ¨Ø§ÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØªÙÙÙÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙØ¨ÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØ¨ÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙØ¨Ø§ÙÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("phone","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("mobile","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙÙ","Business Affairs / Handset",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙØ±Ø¹","Business Affairs / Shops",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØ±Ø¹","Business Affairs / Shops",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙÙØªØ±","Business Affairs / Shops",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØ±ÙØ¹","Business Affairs / Shops",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ±ØµÙØ¯","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§Ø´Ø­Ù","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙÙÙØ³","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø±ØµÙØ¯Ù","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ØªØ­ÙÙÙ Ø§ÙØ±ØµÙØ¯","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØªÙØ±Ù","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨ØªØ´Ø­Ù","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø±ØµÙØ¯","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØµØ¨","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ³Ø±ÙØ©","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ØªØ¬Ø¯ÙØ¯ Ø§ÙØ¨Ø§ÙÙ","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø´Ø§Ø­Ù","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨ØªÙÙÙÙÙ ÙØªÙØ±","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø­ØªØ¯ÙØ¹Ù Ø§ÙÙÙÙØ³","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨ÙØ­Ø³Ø¨Ù","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¬ÙÙÙ","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø®ØµÙ","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¬ÙÙØ©","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙØ§ØªÙØ±Ø©","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØ±Ø´","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ´Ø­Ù","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§Ø¯ÙØ¹","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙØ§ØªÙØ±Ù","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("ÙØ§Ø´","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§Ø³Ø¹Ø§Ø±","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ§Ø³Ø¹Ø§Ø±","Business Affairs / Pricing or Billing",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø®Ø¯ÙØ©","Business Affairs / Other Business Affairs",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙÙÙØ¯","Business Affairs / Other Business Affairs",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ±ÙÙ","Business Affairs / Other Business Affairs",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¨Ø§ÙØ§Øª","Business Affairs / Other Business Affairs",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø®Ø¯ÙØ§Øª","Business Affairs / Other Business Affairs",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ¨Ø§ÙÙ","Business Affairs / Other Business Affairs",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø¹Ø±Ø¶","Business Affairs / Other Business Affairs",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("service","Business Affairs / Other Business Affairs",CHUNK_SCORE));
        dictionary.addEntry(new DictionaryEntry<String>("Ø§ÙØ¹Ø±Ø¶","Business Affairs / Other Business Affairs",CHUNK_SCORE));
        
        
         dictionaryChunkerTT
            = new ExactDictionaryChunker(dictionary,
                                         IndoEuropeanTokenizerFactory.INSTANCE,
                                         true,true);

         dictionaryChunkerTF
            = new ExactDictionaryChunker(dictionary,
                                         IndoEuropeanTokenizerFactory.INSTANCE,
                                         true,false);

         dictionaryChunkerFT
            = new ExactDictionaryChunker(dictionary,
                                         IndoEuropeanTokenizerFactory.INSTANCE,
                                         false,true);

         dictionaryChunkerFF
            = new ExactDictionaryChunker(dictionary,
                                         IndoEuropeanTokenizerFactory.INSTANCE,
                                         false,false);

    }

    public static void chunk(ExactDictionaryChunker chunker, String text) {
        System.out.println("\nChunker."
                           + " All matches=" + chunker.returnAllMatches()
                           + " Case sensitive=" + chunker.caseSensitive());
        Chunking chunking = chunker.chunk(text);
        for (Chunk chunk : chunking.chunkSet()) {
            int start = chunk.start();
            int end = chunk.end();
            String type = chunk.type();
            double score = chunk.score();
            String phrase = text.substring(start,end);
            System.out.println("     phrase=|" + phrase + "|"
                               + " start=" + start
                               + " end=" + end
                               + " type=" + type
                               + " score=" + score);
        }
    }
    
    public static void getEntityAndCategory(ExactDictionaryChunker chunker, String text) {

        Chunking chunking = chunker.chunk(text);
        String entityInfo = "";
        for (Chunk chunk : chunking.chunkSet()) {
            int start = chunk.start();
            int end = chunk.end();
            String type = chunk.type();
            String phrase = text.substring(start,end);
            entityInfo = entityInfo + "     entity=|" + phrase + "|"
                    + " type=" + type + ";" ;
        }
        System.out.println(entityInfo);
    }
    
    public static String getEntity(ExactDictionaryChunker chunker, String text) {

    	
    	dictionaryChunkerTT
        = new ExactDictionaryChunker(dictionary,
                                     IndoEuropeanTokenizerFactory.INSTANCE,
                                     true,true);

     dictionaryChunkerTF
        = new ExactDictionaryChunker(dictionary,
                                     IndoEuropeanTokenizerFactory.INSTANCE,
                                     true,false);

     dictionaryChunkerFT
        = new ExactDictionaryChunker(dictionary,
                                     IndoEuropeanTokenizerFactory.INSTANCE,
                                     false,true);

     dictionaryChunkerFF
        = new ExactDictionaryChunker(dictionary,
                                     IndoEuropeanTokenizerFactory.INSTANCE,
                                     false,false);
    	
        Chunking chunking = chunker.chunk(text);
        String entityInfo = "";
        for (Chunk chunk : chunking.chunkSet()) {
            int start = chunk.start();
            int end = chunk.end();
            String type = chunk.type();
            String phrase = text.substring(start,end);
            if (entityInfo.length() ==0)
            	entityInfo = entityInfo + phrase;
            else entityInfo = entityInfo + " | " + phrase;
        }
        //System.out.println(entityInfo);
        return entityInfo;
    }
    
    public static String getEntityCategory(ExactDictionaryChunker chunker, String text) {
       
    	dictionaryChunkerTT
        = new ExactDictionaryChunker(dictionary,
                                     IndoEuropeanTokenizerFactory.INSTANCE,
                                     true,true);

     dictionaryChunkerTF
        = new ExactDictionaryChunker(dictionary,
                                     IndoEuropeanTokenizerFactory.INSTANCE,
                                     true,false);

     dictionaryChunkerFT
        = new ExactDictionaryChunker(dictionary,
                                     IndoEuropeanTokenizerFactory.INSTANCE,
                                     false,true);

     dictionaryChunkerFF
        = new ExactDictionaryChunker(dictionary,
                                     IndoEuropeanTokenizerFactory.INSTANCE,
                                     false,false);
    	
        Chunking chunking = chunker.chunk(text);
        String entityInfo = "";
        for (Chunk chunk : chunking.chunkSet()) {
            int start = chunk.start();
            int end = chunk.end();
            String type = chunk.type();
            String phrase = text.substring(start,end);
            if (entityInfo.length() ==0)
            	entityInfo = entityInfo + type;
            else entityInfo = entityInfo + " | " + type;
        }
        //System.out.println(entityInfo);
        return entityInfo;
    }

}
