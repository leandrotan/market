create or replace view fact_view_raw_social_media as
select  distinct social_media_source,
        day_key,
        country,
        created_at,
        id,
        text,
        coordinates,
        source,
        lang,
        user_id,
        user_screen_name,
        user_name,
        user_location,
        in_reply_to_user_id,
        in_reply_to_screen_name,
        in_reply_to_status_id,
        country_full_name,
        country_name,
        sentiment,
        category,
        subcategory,
        longitude,
        latitude,
        company_page_likes_num,
        followers,
        post_comments_num,
        post_likes_num,
        account_name,
        source_account,
        topic,
        csp,
        ismain,
        region,
        conversation_root_id
  from (
select  t.social_media_source,
     t.day_key,
  t.country,
  t.created_at,
  t.id,
  t.text,
  t.coordinates,
  t.source,
  t.lang,
  t.user_id,
  t.user_screen_name,
  t.user_name,
  t.user_location,
  t.in_reply_to_user_id,
  t.in_reply_to_screen_name,
  t.in_reply_to_status_id,
  t.country_full_name,
  t.country_name,
  t.sentiment,
  t.category,
  t.subcategory,
  cast(t.longitude as double) as longitude,
  cast(t.latitude as double) as latitude,
  t.company_page_likes_num,
  t.followers,
  t.post_comments_num,
  t.post_likes_num,
  case when lower(t.text) like concat('%',lower(KA.account_screen_name),'%') then account_name end as account_name,
  t.topic,
  op.csp,
  op.ismain,
  op.csp_screen_name as source_account,
  cdr.region,
  con.root_tweet_id as conversation_root_id,
  KA.country as KAcountry
from (select
  'Twitter' as social_media_source,
  f.day_key,
  f.country,
  from_unixtime(unix_timestamp(to_utc_timestamp(unix_timestamp(f.created_at,"EEE MMM dd hh:mm:ss Z yyyy")*1000,"EST")),'dd-MMM-yyyy hh:mm:ss') as created_at,
  f.id,
  f.text,
  f.coordinates ,
  f.source,
  f.lang,
  f.user_id,
  f.user_screen_name,
  f.user_name,
  f.user_location,
  f.in_reply_to_user_id,
  f.in_reply_to_screen_name,
  f.in_reply_to_status_id,
  f.country_full_name,
  f.country_name,
  f.sentiment_category sentiment,
  split(catsub,' / ')[0] as category,
  case when split(catsub,' / ')[0] = 'Customer Care' then 'Customer Care' else split(catsub,' / ')[1] end as subcategory,
  regexp_extract(regexp_replace(regexp_extract(f.coordinates, '^(?:([^:]+)\:?){3}', 1),'\\[|\\]|"|}',""), '^(?:([^,]+)\,?){1}',1) longitude,
  regexp_extract(regexp_replace(regexp_extract(f.coordinates, '^(?:([^:]+)\:?){3}', 1),'\\[|\\]|"|}',""), '^(?:([^,]+)\,?){2}',1) latitude,
  f.topic,
  null as company_page_likes_num,
  followers,
  null as post_comments_num,
  null as post_likes_num,
     f.mention_screen_name,
     f.hashtags
 from fact_orc_raw_tweets f
   LATERAL VIEW outer explode(split(entity_subject,' \\| ')) categories AS catsub) t
  left join wrd10_socialmedia.dim_cityregion cdr on upper(trim(cdr.location)) = upper(trim(split(country_full_name,',')[0]))
  left join (select distinct root_tweet_id,child_tweet_id from wrd10_socialmedia.fact_orc_twitter_conversations) con on con.child_tweet_id = t.id,
  wrd10_socialmedia.dim_operator op,
  dim_keyaccounts KA 
 where upper(trim(op.csp_screen_name)) = upper(trim(t.mention_screen_name)) and op.country = t.country
 ) w
 where country not in ('Lebanon','Egypt') or (account_name is not null and country in ('Lebanon','Egypt') and KAcountry=country)
union all

select  t1.social_media_source,
     t1.day_key,
  t1.country,
  t1.created_at,
  t1.id,
  t1.text,
  t1.coordinates,
  t1.source,
  t1.lang,
  t1.user_id,
  t1.user_screen_name,
  t1.user_name,
  t1.user_location,
  t1.in_reply_to_user_id,
  t1.in_reply_to_screen_name,
  t1.in_reply_to_status_id,
  t1.country_full_name,
  t1.country_name,
  t1.sentiment,
  t1.category,
  t1.subcategory,
  t1.longitude,
  t1.latitude,
  t1.company_page_likes_num,
  t1.followers,
  t1.post_comments_num,
  t1.post_likes_num,
  account_name,
  source_account,
  t1.topic,
  o.csp,
  o.ismain,
  t1.region,
  con1.root_message_id as conversation_root_id
from( select
   'Facebook' as social_media_source,
   from_unixtime(unix_timestamp(f.post_created_time,"yyyy-MM-dd'T'hh:mm:ssZ"),'yyyyMMdd') day_key,
   f.country,
   from_unixtime(unix_timestamp(to_utc_timestamp(unix_timestamp(f.post_created_time,"yyyy-MM-dd'T'hh:mm:ssZ")*1000,"EST")),'dd-MMM-yyyy hh:mm:ss') as created_at,
   f.post_id as id,
   f.post_message as text,
   null as coordinates,
   null as source,
   null as lang,
   post_author_id as user_id,
   post_author_name as user_screen_name,
   post_author_name as user_name,
   post_author_region as user_location,
   null as in_reply_to_user_id,
   null as in_reply_to_screen_name,
   null as in_reply_to_status_id,
   country as country_full_name,
   post_author_region as region,
   country as country_name,
   f.sentiment,
   split(catsub,' / ')[0] as category,
   case when split(catsub,' / ')[0] = 'Customer Care' then 'Customer Care' else split(catsub,' / ')[1] end as subcategory,
   null as longitude,
   null as latitude,
   f.topic,
   f.company_page_likes_num as company_page_likes_num,
   null as followers,
   f.post_comments_num,
   f.post_likes_num,
   f.company_id,
   f.company_name as source_account
  from fact_orc_raw_facebook_page_posts f
   LATERAL VIEW outer explode(split(sentiment_category,' \\| ')) categories AS catsub) as t1
 join dim_operator o on t1.company_id = o.csp_screen_name and o.country= t1.country
 left join dim_keyaccounts KA on lower(csp) = lower(account_screen_name) and KA.country=t1.country
 left outer join (select distinct root_message_id,child_message_id from fact_orc_facebook_conversations) as con1 on con1.child_message_id = t1.id
 
 union all

select  t2.social_media_source,
     t2.day_key,
  t2.country,
  t2.created_at,
  t2.id,
  t2.text,
  t2.coordinates,
  t2.source,
  t2.lang,
  t2.user_id,
  t2.user_screen_name,
  t2.user_name,
  t2.user_location,
  t2.in_reply_to_user_id,
  t2.in_reply_to_screen_name,
  t2.in_reply_to_status_id,
  t2.country_full_name,
  t2.country_name,
  t2.sentiment,
  t2.category,
  t2.subcategory,
  t2.longitude,
  t2.latitude,
  t2.company_page_likes_num,
  t2.followers,
  t2.post_comments_num,
  t2.comment_likes_num as post_likes_num,
  account_name,
  source_account,
  t2.topic,
  o.csp,
  o.ismain,
  t2.region,
  con2.root_message_id as conversation_root_id
from( select
   'Facebook' as social_media_source,
   from_unixtime(unix_timestamp(f1.comment_created_time,"yyyy-MM-dd'T'hh:mm:ssZ"),'yyyyMMdd') day_key,
   f1.country,
   from_unixtime(unix_timestamp(to_utc_timestamp(unix_timestamp(f1.comment_created_time,"yyyy-MM-dd'T'hh:mm:ssZ")*1000,"EST")),'dd-MMM-yyyy hh:mm:ss') as created_at,
   f1.comment_id as id,
   f1.comment_message as text,
   null as coordinates,
   null as source,
   null as lang,
   comment_author_id as user_id,
   comment_author_name as user_screen_name,
   comment_author_name as user_name,
   null as user_location,
   null as in_reply_to_user_id,
   null as in_reply_to_screen_name,
   comment_parent_id as in_reply_to_status_id,
   country as country_full_name,
   null as region,
   country as country_name,
   f1.comment_sentiment as sentiment,
   split(catsub,' / ')[0] as category,
   case when split(catsub,' / ')[0] = 'Customer Care' then 'Customer Care' else split(catsub,' / ')[1] end as subcategory,
   null as longitude,
   null as latitude,
   f1.topic,
   f1.company_page_likes_num as company_page_likes_num,
   null as followers,
   null as post_comments_num,
   f1.comment_likes_num,
   f1.company_id,
   f1.company_name as source_account
  from fact_orc_raw_facebook_post_comments f1
   LATERAL VIEW outer explode(split(comment_sentiment_category,' \\| ')) categories AS catsub) as t2
 join dim_operator o 
    on t2.company_id = o.csp_screen_name 
   and o.country= t2.country
 left join dim_operator o2
    on t2.user_id = o2.csp_screen_name
   and o2.country = t2.country
 left join dim_keyaccounts KA1 
    on lower(o.csp) = lower(KA1.account_screen_name) 
   and KA1.country=t2.country
 left join (select distinct child_message_id, root_message_id from fact_orc_facebook_conversations) as con2 
    on con2.child_message_id = t2.id
 where o2.csp_screen_name is null;