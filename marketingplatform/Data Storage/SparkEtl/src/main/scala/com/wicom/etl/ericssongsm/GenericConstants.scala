package com.wicom.etl.ericssongsm

object GenericConstants {
  val WATCHER_FILE_INCOMING_DIRECTORY: String = "watcher.file.incoming.directory"
  val WATCHER_FILE_QUEUED_DIRECTORY: String = "watcher.file.queued.directory"
  val WATCHER_FILE_PROCESSED_DIRECTORY: String = "watcher.file.processed.directory"
  val WATCHER_FILE_ERROR_DIRECTORY: String = "watcher.file.error.directory"
  val WATCHER_FILE_EXTENSION: String = "watcher.file.extension"
  val STREAM_FILE_DELIMITER: String = "stream.file.delimiter"
  val AUDIT_DB_AUDITTABLE: String = "audit.db.auditTable"
  val TOPOLOGY_PROCESS_ID: String = "topology.process.id"
  val TOPOLOGY_MESSAGE_TIMEOUT_SECS: String = "topology.message.timeout.secs"
  val TOPOLOGY_PARALLELISM_READER_HINT: String = "topology.parallelism.readerHint"
  val TOPOLOGY_PARALLELISM_LOADER_HINT: String = "topology.parallelism.dbLoaderHint"
  val TOPOLOGY_PARALLELISM_PROCESSING_HINT: String = "topology.parallelism.processingHint"
  val HIVE_DB_METASTOREURI: String = "hive.db.metaStoreURI"
  val HIVE_DB_DBNAME: String = "hive.db.dbName"
  val HIVE_DB_TBLNAME: String = "hive.db.tblName"
  val HIVE_DB_BATCH_SIZE: String = "hive.db.batch.size"
  val HIVE_DB_TX_PER_BATCH: String = "hive.db.tx.per.batch"
  val HIVE_DB_IDLE_TIMEOUT: String = "hive.db.idle.timeout"
  val HIVE_DB_TBL_COLUMNS: String = "hive.db.tbl.columns"
  val DEBUG_MODE: String = "debug.mode"
  val STAX_PARSER_OUTPUT_DIRECTORY: String = "stax.parser.output.directory"
  val ASN_PARSER_PATH: String = "asn.parser.path"
  val ASN_PARSER_SCHEMA_PATH: String = "asn.parser.schema.path"
  val ASN_PARSER_OUTPUT_DIRECTORY: String = "asn.parser.output.directory"
  val VERTICA_DRIVER: String = "vertica.jdbc.driver"
  val VERTICA_SERVER: String = "vertica.server.name"
  val VERTICA_PORT: String = "vertica.server.port"
  val VERTICA_DB: String = "vertica.db"
  val VERTICA_USER: String = "vertica.user"
  val VERTICA_PASS: String = "vertica.pass"
  val VERTICA_DB_FACT_TABLE: String = "vertica.fact.table"
  val TRANSFORMER_FILE_INCOMING_DIRECTORY: String = "transformer.file.incoming.directory"
  val TRANSFORMER_FILE_QUEUED_DIRECTORY: String = "transformer.file.queued.directory"
  val TRANSFORMER_FILE_PROCESSED_DIRECTORY: String = "transformer.file.processed.directory"
  val TRANSFORMER_FILE_ERROR_DIRECTORY: String = "transformer.file.error.directory"
  val TRANSFORMER_FILE_NETWORKANDDICTIONARY_POPULATE: String = "transformer.file.networkanddictionary.populate"
  val DB_TYPE: String = "db.type"
  val HDFS_URI: String = "hdfs.uri"
  val HDFS_DESTINATION_DIRECTORY: String = "hdfs.destination.directory"
}
